RO (Repository Observer) Server
===============================

Серверная часть системы RO (Repository Observer), предназначенной для
отслеживания соответствия пакетов, установленных на рабочих системах,
репозиториям, с которыми эти системы связаны.

Изначально система RO рассчитана на работу с системой управления пакетами RPM и
тестировалась при работе с дистрибутивами ALT Linux Sisyphus.

Серверная часть представляет собой скрипт, написанный на языке Perl и
предназначенный для работы в режиме Fast-CGI приложения.

Системные требования
====================

Для нормальной работы скрипта требуются следующие Perl-модули:

* CGI::Fast
* DBI (+ DBD-модуль взаимодействия с выбранной СУБД)
* XML::Simple

Скрипт тестировался при работе совместно с веб-сервером lighttpd.

Принцип работы
==============

Архитектурно система RO состоит из узлов, на которых запускается скрипт-клиент,
и сервера системы, на котором работает скрипт-сервер.

Каждому узлу соответствует собственный уникальный идентификатор (максимум 32
символа).

Общение клиента с сервером происходит по одному из стандартных гипертекстовых
протоколов (http / https). Возможно использование произвольного порта. Для
отсылки данных используется метод POST.

Запросы к серверу подразделяются на:

* Запросы инициализации узла. При обработке этих запросов сервер системы
вначале производит уничтожение в БД системы старой информации о связанных с
узлом пакетах. Затем в БД заносится вся поступившая в запросе информация.
* Запросы обновления узла.

При поступлении запроса от клиента сервер вначале проверяет наличие узла с
указанным уникальным идентификатором в числе узлов, занесённых в БД.

В случае возникновения какой-либо ошибки при работе с клиентом, информация о
ней отсылается клиенту в виде текстового документа (text/plain).

В случае нормальной обработки запроса клиенту отсылается пустой документ, либо,
в случае запроса инициализации, документ с уведомлением о количестве удалённых
старых записей о связанных с узлом пакетах.

Информация о работе с клиентами фиксируется в лог-файле, в случае, если в
конфигурации заданы соответствующие параметры.

Формат конфигурационного файла
==============================

Конфигурационный файл представляет собой фрагмент кода, написанного на языке
Perl и представляющего собой ассоциативный массив (хеш), ключами которого
являются конфигурационные параметры.

Файл конфигурации должен называться 'config' и находиться в той же директории,
что и серверный скрипт.

Шаблон типовой конфигурации приведён в файле 'config'.

Пример фрагмента конфигурации lighttpd
======================================
-------------------------------------------------------------------------------

 server.port                = 8279

 fastcgi.server = (
        "/" => (
	        "ro" => (
	    		"socket" => "/tmp/ro.socket",
	                "check-local" => "disable",
			"bin-path" => "/var/www/perl/ro_server.pl",
			"min-procs"    => 1,
			"max-procs"    => 2,
			"idle-timeout" => 20
		)
       )
 )

-------------------------------------------------------------------------------							